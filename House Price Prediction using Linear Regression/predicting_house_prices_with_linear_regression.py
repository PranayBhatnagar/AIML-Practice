# -*- coding: utf-8 -*-
"""Predicting House Prices with Linear Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11_hwcb8Hl3WFGV7s_nt1Mf_0GzQgckHB
"""

import numpy as np
import pandas as pd

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the train and test datasets
train_data = pd.read_csv('train.csv')
test_data = pd.read_csv('test.csv')

# Display the first few rows of the train dataset
print("Train Dataset:")
print(train_data.head())

# Display the first few rows of the test dataset
print("\nTest Dataset:")
print(test_data.head())

# Prepare data for training
X_train = train_data[['GrLivArea']]
y_train = train_data['SalePrice']
X_test = test_data[['GrLivArea']]  # Using the same feature as in training for simplicity

# Train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the validation set
y_val_pred = model.predict(X_val)

# Calculate Mean Squared Error (MSE) on the validation set
mse = mean_squared_error(y_val, y_val_pred)
print(f"Mean Squared Error on Validation Set: {mse}")

# Load the test dataset
test_data = pd.read_csv('test.csv')

# Prepare test data for prediction
X_test = test_data[['GrLivArea']]  # Using the same feature as in training for simplicity

# Make predictions on the test dataset
predictions = model.predict(X_test)

# Prepare submission file for Kaggle
submission = pd.DataFrame({'Id': test_data['Id'], 'SalePrice': predictions})
submission.to_csv('submission.csv', index=False)

# Download the submission file
from google.colab import files
files.download('submission.csv')